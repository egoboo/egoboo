#Speed up compilation by making in parallel
#MAKEFLAGS += -j8


#---------------------
# the source files
SOURCE := ${wildcard ./src/game/*.c}
SOURCE += ${wildcard ./src/game/*/*.c}
SOURCE += ${wildcard ./src/game/*.cpp}
SOURCE += ${wildcard ./src/game/*/*.cpp}

SOURCE := $(filter-out ./src/game/PhysicalConstants.cpp, $(SOURCE))

#---------------------
# binary output
OBJECTS := $(SOURCE:.c=.o)
OBJECTS += $(SOURCES:.cpp=.o)

#Binary file
BIN = ./data/egoboo.exe

#---------------------
#Includes
INCLUDES := -Isrc -I../egolib/src
INCLUDES += -I../../enet-1.3.12/include
INCLUDES += -I../../physfs-2.0.3/

#---------------------
# the SDL configuration
SDLCONF_C := $(shell sdl-config --cflags)
#SDLCONF_L := $(shell sdl-config --static-libs)

#---------------------
# the compiler options

CXX      := g++
CXXFLAGS  := $(INCLUDES) $(SDLCONF_C) -std=c++11 -O0 -D_DEBUG 
#-Wall -Weffc++

#debug options
CXXFLAGS += -ggdb -fdiagnostics-color=always
#CXXFLAGS += -fsanitize=undefined -fsanitize=leak -fsanitize=address
#CXXFLAGS += -fsanitize=integer-divide-by-zero -fsanitize=null -fsanitize=vla-bound -fsanitize=return -fsanitize=signed-integer-overflow -fsanitize=enum

LINKER_LIBS := -lmingw32 -mconsole -lm -ldinput8 -ldxguid -ldxerr8 -luser32 -lgdi32 -limm32 -lole32 -loleaut32 -lshell32 -lversion -luuid -static-libgcc -lSHFolder -lAdvapi32
LINKER_LIBS += -L../egolib/ -legoboo
LINKER_LIBS += -L/usr/local/lib -lSDLmain -lSDL -lSDL_mixer -lSDL_ttf -lSDL_image
LINKER_LIBS += -lphysfs
LINKER_LIBS += -lenet -lwsock32 -lws2_32
LINKER_LIBS += -lopengl32 -lglu32 -lShlwapi -lwinmm 
#-static


#------------------------------------
# definitions of the target projects

.PHONY: all clean

all: $(BIN)

# Generic rule
%.o: %.c
	$(CXX) $(CXXFLAGS) -c $< -o $@
%.o: %.cpp
	$(CXX) $(CXXFLAGS) -c $< -o $@

$(BIN): ${OBJECTS} 
	$(CXX) -o $(BIN) $(CXXFLAGS) $(OBJECTS) $(LINKER_LIBS)

clean:
	rm -f ./src/game/*.o $(BIN)
